# Light on: bedroom (sunrise)
- alias: Light on - bedroom (sunrise)
  id: 'sunrise_light'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: time
    at: '06:50:00'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.bedroom
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'on'
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 1
    - delay: '00:00:01'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 254
        transition: 900

# Light on: living room (evening)
- alias: 'Light on - living room (evening)'
  id: 'lights on in the evening'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "-00:30:00"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.living_room
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
    service: light.turn_on
    entity_id: light.living_room

# Light on: living room (someone comes home)
- alias: Light on - living room (someone comes home)
  id: 'lights on when home'
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id: 
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.living_room
        state: 'off'
      - condition: time
        after: "16:00:00"
        before: "07:00:00"
  action:
    service: hue.hue_activate_scene
    data_template:
      group_name: "Living Room"
      scene_name: "LivingBright"

# Lights and heaters off: all (nobody home)
- alias: Lights and heaters off - all (nobody home)
  id: 'nobody_home_lights_heaters_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
    - binary_sensor.graham_bayesian
    - binary_sensor.bora_bayesian
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'off'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'off'
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    - service: switch.turn_off
      entity_id: switch.plug_bedroomheater_switch
    - service: switch.turn_off
      entity_id: switch.plug_studyheater_switch

# Bedroom heater off when door closes and birdie is away
- alias: Bedroom heater off - door closes, birdie away
  id: 'bedroom_heater_off_door_closes_birdie_away'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'on'
    to: 'off'
  condition:
    - condition: template
      value_template: "{{ not is_state('binary_sensor.bora_bayesian', 'on') }}"
    - condition: state
      entity_id: switch.plug_bedroomheater_switch
      state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.plug_bedroomheater_switch

# Bedroom heater off when birdie leaves and the door is cloesd
- alias: Bedroom heater off - birdie away, door closes
  id: 'bedroom_heater_off_birdie_away_door_closes'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.bora_bayesian
    to: 'off'
  condition:
    condition: state
    entity_id: binary_sensor.door_bedroom
    state: 'off'
  action:
    service: switch.turn_off
    entity_id: switch.plug_bedroomheater_switch

# Light on: study (motion detected)
- alias: Light on - study (motion detected)
  id: 'study_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.study
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
    service: light.turn_on
    entity_id: light.study

# Light off: study (no motion)
- alias: Light off - study (no motion)
  id: 'study_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.study
      state: 'on'
    - condition: state
      entity_id: sensor.ingame
      state: 'no'
  action:
    - service: light.turn_off
      entity_id: light.study
    - service: switch.turn_off
      entity_id: switch.plug_158d00024d8cc9

# Light on: kitchen (motion detected)
- alias: Light on - kitchen (motion detected)
  id: 'kitchen_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: time
        after: "16:00:00"
        before: "23:00:00"
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
      - condition: state
        entity_id: light.kitchen
        state: 'off'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Kitchen"
        scene_name: "KitchenBright"

# Light on: kitchen night light
- alias: Light on - kitchen night light
  id: 'kitchen_nightlight_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: "23:00:00"
      before: "06:30:00"
    - condition: state
      entity_id: light.kitchen
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'on'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Kitchen"
        scene_name: "KitchenDim"

# Light off: kitchen (no motion)
- alias: Light off - kitchen (no motion)
  id: 'kitchen_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen
    from: 'on'
    to: 'off'
  condition:
      condition: state
      entity_id: light.kitchen
      state: 'on'
  action:
    service: light.turn_off
    entity_id: light.kitchen

# Light on: living room (motion detected)
- alias: Light on - living room (motion detected)
  id: 'livingroom_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: "18:00:00"
      before: "23:00:00"
    - condition: state
      entity_id: light.living_room
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'on'
  action:
    service: hue.hue_activate_scene
    data_template:
      group_name: "Living Room"
      scene_name: "LivingBright"

# Light off: living/dining room (no motion)
- alias: Light off - living/dining room (no motion)
  id: 'livingdining_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'on'
    to: 'off'
  condition:
    - condition: template
      value_template: "{{ not is_state('binary_sensor.bora_bayesian', 'on') }}"
    - condition: or
      conditions:
      - condition: state
        entity_id: light.living_room
        state: 'on'
      - condition: state
        entity_id: light.dining_room
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.living_room
    - service: light.turn_off
      entity_id: light.dining_room

# Light on: living room night light
- alias: Light on - living room night light
  id: 'livingroom_nightlight_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: "23:00:00"
      before: "06:00:00"
    - condition: state
      entity_id: light.living_room
      state: 'off'
    - condition: state
      entity_id: binary_sensor.door_bedroom
      state: 'on'
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'on'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Living Room"
        scene_name: "LivingDim"

# Light off: living room night light (no motion)
- alias: Light off - living room night light (no motion)
  id: 'livingroom_nighlight_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'on'
    to: 'off'
  condition:
    - condition: time
      after: "23:00:00"
      before: "06:00:00"
    - condition: or
      conditions:
      - condition: state
        entity_id: light.living_room
        state: 'on'
      - condition: state
        entity_id: light.dining_room
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.living_room
    - service: light.turn_off
      entity_id: light.dining_room

# Warning
- alias: Warning - left the house with the door open
  id: 'warning_left_the_house_with_the_door_open'
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id: 
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
      to: 'off'
  condition:
    - condition: state
      entity_id: binary_sensor.door_bedroom
      state: 'on'
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
  action:
    - service: notify.graham_telegram
      data:
        message: "Nobody is home but the bedroom door is open. Molly!"


# Warning: Door open while nobody home
- alias: Warning - door open while nobody home
  id: 'automation.warning_door_opened_while_nobody_was_home'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
  action:
    - service: notify.graham_telegram
      data:
        message: "Nobody is home but the bedroom door opened."

# Flash study and living room when birdie arrives at work
- alias: Birdie arrives at work
  id: 'birdie_arrive_work'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: device_tracker.google_maps_111604514484536138497
    zone: zone.work
    event: enter
  condition:
    condition: and
    conditions:
    - condition: time
      after: "08:00:00"
      before: "10:00:00"
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
  action:
    entity_id: light.study, light.living_room
    service: light.turn_on
    data:
      flash: short

# Flash study and living room when birdie leaves work
- alias: Birdie leaves work
  id: 'birdie_leaves_work'
  hide_entity: True
  initial_state: 'on'
  trigger:
  - platform: zone
    entity_id: device_tracker.google_maps_111604514484536138497
    zone: zone.work
    event: leave
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
    - condition: time
      after: "16:30:00"
      before: "22:00:00"
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
  action:
    service: light.turn_on
    entity_id: light.study, light.living_room
    data:
      flash: short

# Flash study and living room, and turn living room lights on when birdie is almost home
- alias: Birdie almost home
  id: 'birdie_almost_home'
  hide_entity: True
  initial_state: 'on'
  trigger:
  - platform: zone
    entity_id: device_tracker.google_maps_111604514484536138497
    zone: zone.rhodes
    event: enter
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
    - condition: time
      after: "16:30:00"
      before: "22:00:00"
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.study, light.living_room
      data:
        flash: short
    - service: hue.hue_activate_scene
      data:
        group_name: "Living Room"
        scene_name: "LivingBright"
    - service: light.turn_on
      entity_id: light.dining_room
    - service: tts.google_say
      entity_id: media_player.molly_home
      data:
        message: 'Bora is at Rhodes and will be home soon!'

# Flash study and living room, and turn living room lights on when birdie is almost home
- alias: Birdie landed in Bali!
  id: 'birdie_landed_bali'
  hide_entity: True
  initial_state: 'on'
  trigger:
  - platform: zone
    entity_id: device_tracker.google_maps_111604514484536138497
    zone: zone.bali
    event: enter
  condition:
    condition: state
    entity_id: binary_sensor.graham_bayesian
    state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.study, light.living_room
      data:
        flash: short
    - service: hue.hue_activate_scene
      data:
        group_name: "Living Room"
        scene_name: "LivingBright"
    - service: notify.graham_telegram
      data:
        message: "Birdie landed in Bali!"
    - service: tts.google_say
      entity_id: media_player.molly_home
      data:
        message: 'Birdie landed in Bali!'

##########
# XIAOMI #
##########

- alias: 'Door open: bedroom light on'
  id: 'door_open_bedroom_light_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  action:
    - service: light.turn_on
      entity_id: light.bedroom
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Bedroom"
        scene_name: "BedroomBright"

- alias: 'Door closed: bedroom light off'
  id: 'door_closed_bedroom_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'on'
    to: 'off'
  action:
    - service: light.turn_on
      entity_id: light.bedroom
    - service: light.turn_off
      entity_id: light.bedroom

- alias: 'Bedroom button: light on'
  id: 'bedroom_button_light_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'off'
  action:
    service: hue.hue_activate_scene
    data_template:
      group_name: "Bedroom"
      scene_name: "BedroomBright"

- alias: 'Bedroom button: light off'
  id: 'bedroom_button_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template 
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.bedroom

- alias: 'Bedroom button: double click all lights off'
  id: 'bedroom_button_all_lights_off_double_click'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: template 
    value_template: "{{ 'double' == trigger.payload_json.click }}"
  action:
    - service: light.turn_off
      entity_id: light.bedroom
    - service: light.turn_off
      entity_id: light.kitchen
    - service: light.turn_off
      entity_id: light.living_room
    - service: light.turn_off
      entity_id: light.dining_room

- alias: 'Bedroom button: triple click heater toggle'
  id: 'bedroom_button_triple_click_heater_toggle'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: template 
    value_template: "{{ 'triple' == trigger.payload_json.click }}"
  action:
    - service_template: >
        {% if is_state("switch.plug_bedroomheater_switch", "off") %}
          switch.turn_on
        {% else %}
          switch.turn_off
        {% endif %}
      entity_id: switch.plug_bedroomheater_switch
    - service: tts.google_say
      entity_id: media_player.molly_mini
      data_template:
        message: >
          {% if is_state("switch.plug_bedroomheater_switch", "off") %}
            message: 'Turning on the heater'
          {% else %}
            message: 'Turning off the heater'
          {% endif %}

- alias: 'Bedroom button: long press boil kettle'
  id: 'bedroom_button_long_press_boil_kettle'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: template 
    value_template: "{{ 'long_release' == trigger.payload_json.click }}"
  action:
    - service_template: >
        {% if is_state("switch.plug_kettle_switch", "off") %}
          switch.turn_on
        {% else %}
          switch.turn_off
        {% endif %}
      entity_id: switch.plug_kettle_switch
    - service: tts.google_say
      entity_id: media_player.molly_mini
      data_template:
        message: >
          {% if is_state("switch.plug_kettle_switch", "off") %}
            message: 'Turning on the kettle'
          {% else %}
            message: 'Turning off the kettle'
          {% endif %}

- alias: 'Bedroom switch: light on'
  id: 'bedroom_switch_light_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'off'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Bedroom"
        scene_name: "BedroomBright"

- alias: 'Bedroom switch: light off'
  id: 'bedroom_switch_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.bedroom

- alias: 'Kitchen switch: light on'
  id: 'kitchen_switch_light_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_kitchen'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.kitchen
        state: 'off'
  action:
    - service: hue.hue_activate_scene
      data_template:
        group_name: "Kitchen"
        scene_name: "KitchenBright"

- alias: 'Kitchen switch: light off'
  id: 'kitchen_switch_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_kitchen'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.kitchen
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.kitchen

- alias: 'Study switch: light toggle'
  id: 'study_switch_light_toggle'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_study'
  condition:
    condition: template
    value_template: "{{ 'single' == trigger.payload_json.click }}"
  action:
    service: light.toggle
    entity_id: light.study

- alias: 'Left switch: living room on'
  id: 'left_switch_living_room_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'left' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.living_room
        state: 'off'
  action:
    service: hue.hue_activate_scene
    data_template:
      group_name: "Living Room"
      scene_name: "LivingBright"

- alias: 'Left switch: living room off'
  id: 'left_switch_living_room_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'left' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.living_room
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.living_room

- alias: 'Right switch: dining room on'
  id: 'right_switch_dining_room_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'right' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.dining_room
        state: 'off'
  action:
    service: hue.hue_activate_scene
    data_template:
      group_name: "Dining Room"
      scene_name: "DiningBright"

- alias: 'Right switch: dining room off'
  id: 'right_switch_dining_room_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'right' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.dining_room
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.dining_room

- alias: 'Both switches: living/dining room toggle'
  id: 'both_switches_living_dining_room_toggle'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: template
    value_template: "{{ 'both' == trigger.payload_json.click }}"
  action:
    service: light.toggle
    entity_id: light.living_room, light.dining_room

# Turn on heater after 9pm if temperature is below 20
- alias: "Turn on heater and kettle at 9pm if temperature is below 20"
  id: 'heater_on_9pm_temperature_below_20'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: 'sensor.temperature'
        below: '20'
      - condition: state
        entity_id: 'switch.plug_bedroomheater_switch'
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.plug_bedroomheater_switch
    - service: switch.turn_on
      entity_id: switch.plug_kettle_switch
    - service: tts.google_say
      entity_id: media_player.molly_home
      data:
        message: 'Turning on the heater and kettle'

# Toggle receiver power - Chromecast Idle -> Playing
- alias: "Toggle receiver power - Chromecast Idle -> Playing"
  id: 'toggle_receiver_power_chromecast_idle_to_playing'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.molly_dongle
    from: 'idle'
    to: 'playing'
  action:
    - service: script.turn_on
      entity_id: script.receiver_power
    - service: script.turn_on
      entity_id: script.receiver_power

# Toggle receiver power - Chromecast Playing -> Off
- alias: "Toggle receiver power - Chromecast Playing -> Off"
  id: 'toggle_receiver_power_chromecast_playing_to_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.molly_dongle
    from: 'playing'
    to: 'off'
  action:
    - service: script.turn_on
      entity_id: script.receiver_power
    - service: script.turn_on
      entity_id: script.tv_power

# Toggle receiver power - Chromecast Paused -> Off
- alias: "Toggle receiver power - Chromecast Playing -> Off"
  id: 'toggle_receiver_power_chromecast_paused_to_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.molly_dongle
    from: 'paused'
    to: 'off'
  action:
    - service: script.turn_on
      entity_id: script.receiver_power
    - service: script.turn_on
      entity_id: script.tv_power

# Set theme at startup
- alias: 'Set theme at startup'
  id: 'set_theme_at_startup'
  hide_entity: True
  initial_state: 'on'
  trigger:
   - platform: homeassistant
     event: start
  action:
    service: frontend.set_theme
    data:
      name: midnight

# Theme switcher
- alias: 'Automatic Theme Change'
  id: 'automatic_theme_change'
  hide_entity: True
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.hass_template
  action:
    - service: frontend.set_theme
      data_template:
        name: "{{ states.input_select.hass_template.state }}"

# Bora S8 Bluetooth Occupancy - True
- alias: 'Bora S8 Bluetooth Occupancy - True'
  id: 's8_bluetooth_occupancy_true'
  hide_entity: True
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.bora_s8_bluetooth
      above: 85
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.s8_bluetooth_occupancy

# Bora S8 Bluetooth Occupancy - False
- alias: 'Bora S8 Bluetooth Occupancy - False'
  id: 's8_bluetooth_occupancy_false'
  hide_entity: True
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.bora_s8_bluetooth
      below: 20
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.s8_bluetooth_occupancy

# Graham Pixel Bluetooth Occupancy - True
- alias: 'Graham Pixel Bluetooth Occupancy - True'
  id: 'pixel_bluetooth_occupancy_true'
  hide_entity: True
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.graham_pixel_bluetooth
      above: 85
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.pixel_bluetooth_occupancy

# Graham Pixel Bluetooth Occupancy - False
- alias: 'Graham Pixel Bluetooth Occupancy - False'
  id: 'pixel_bluetooth_occupancy_false'
  hide_entity: True
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.graham_pixel_bluetooth
      below: 20
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.pixel_bluetooth_occupancy
