########################################################################################################################
#                                                    SENSOR LIGHTS                                                     #
########################################################################################################################

# Light on: study (motion detected)
- alias: Light on, study (motion detected)
  id: 'study_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.dining_room
        state: 'off'
      - condition: time
        after: '06:00:00'
      - condition: time
        before: '23:00:00'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
  - service: light.turn_on
    entity_id: light.dining_room
    data:
      brightness_pct: 100
      color_temp: 154

# Light on: study (motion detected - night light)
- alias: Light on, study (motion detected), night light
  id: 'study_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.dining_room
        state: 'off'
      - condition: time
        after: '23:00:00'
      - condition: time
        before: '06:00:00'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
  - service: light.turn_on
    entity_id: light.dining_room
    data:
      brightness_pct: 80
      color_temp: 500

# Light on: study (motion detected)
- alias: Light on, study (motion detected)
  id: 'study_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.dining_room
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
  - service: light.turn_on
    entity_id: light.dining_room
    data:
      brightness_pct: 100
      color_temp: 154

# Light off: study (no motion)
- alias: Light off, study (no motion)
  id: 'study_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.dining_room
      state: 'on'
    - condition: state
      entity_id: light.living_room
      state: 'off'
    - condition: state
      entity_id: sensor.ingame
      state: 'no'
  action:
    - service: light.turn_off
      entity_id: light.dining_room
    - service: switch.turn_off
      entity_id: switch.plug_kettle_switch

# Light on: kitchen (motion detected)
- alias: Light on, kitchen (motion detected)
  id: 'kitchen_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ (state_attr('sun.sun', 'elevation')) < 13.5 }}"
      - condition: time
        after: '06:00:00'
      - condition: time
        before: '23:00:00'
      - condition: state
        entity_id: light.kitchen
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.kitchen
        brightness_pct: 100
        color_temp: 154

# Light on: kitchen night light
- alias: Light on, kitchen night light
  id: 'kitchen_nightlight_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: '23:00:00'
      before: '06:00:00'
    - condition: state
      entity_id: light.kitchen
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.kitchen
        brightness_pct: 20
        color_temp: 500

# Light off: kitchen (no motion)
- alias: Light off, kitchen (no motion)
  id: 'kitchen_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen
    from: 'on'
    to: 'off'
    for:
      minutes: 2
  condition:
      condition: state
      entity_id: light.kitchen
      state: 'on'
  action:
    service: light.turn_off
    entity_id: light.kitchen

# Light on: living room (motion detected)
- alias: Light on, living room (motion detected)
  id: 'livingroom_motion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: '06:00'
    - condition: time
      before: '23:00'
    - condition: template
      value_template: "{{ (state_attr('sun.sun', 'elevation')) < 13.5 }}"
    - condition: state
      entity_id: light.living_room
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 100
        color_temp: 153

# Light off: living/dining room (no motion)
- alias: Light off, living,dining room (no motion)
  id: 'livingdining_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ not is_state('binary_sensor.bora_bayesian', 'on') }}"
      - condition: state
        entity_id: light.living_room
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.living_room

# Light off: living/dining room - no motion (birdie asleep)
- alias: Light off, living/dining room - no motion (birdie asleep)
  id: 'light_off_living_dining_no_motion_birdie_asleep'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'on'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '06:00:00'
        before: '23:00:00'
      - condition: state
        entity_id: binary_sensor.door_bedroom
        state: 'on'
      - condition: state
        entity_id: light.bedroom
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: light.living_room
          state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.living_room

# Light on: living room night light
- alias: Light on, living room night light
  id: 'livingroom_nightlight_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: time
      after: '23:00:00'
      before: '06:00:00'
    - condition: state
      entity_id: light.living_room
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 20
        color_temp: 500

# Light off: living room night light (no motion)
- alias: Light off, living room night light (no motion)
  id: 'livingroom_nighlight_nomotion'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'on'
    to: 'off'
  condition:
    - condition: state
      entity_id: binary_sensor.door_bedroom
      state: 'on'
    - condition: state
      entity_id: light.bedroom
      state: 'off'
    - condition: time
      after: '23:00:00'
      before: '06:00:00'
    - condition: or
      conditions:
      - condition: state
        entity_id: light.living_room
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.living_room

# Light on: study (someone comes home, motion already detected)
- alias: Light on study - someone comes home (motion already detected)
  id: 'study_motion_already'
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id:
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.dining_room
        state: 'off'
      - condition: state
        entity_id: binary_sensor.motion_study_occupancy
        state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.dining_room
        brightness_pct: 100
        color_temp: 153

# Light on: living (someone comes home, motion already detected)
- alias: Light on living - someone comes home (motion already detected)
  id: 'living_motion_already'
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id:
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.living_room
        state: 'off'
      - condition: state
        entity_id: binary_sensor.motion_study_occupancy
        state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 100
        color_temp: 153

# Light on: kitchen (someone comes home, motion already detected)
- alias: Light on - kitchen (someone comes home, motion already detected)
  id: 'kitchen_motion_already'
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id:
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.dining_room
        state: 'off'
      - condition: state
        entity_id: binary_sensor.motion_kitchen
        state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.kitchen
        brightness_pct: 100
        color_temp: 153

########################################################################################################################
#                                                    ROUTINE LIGHTS                                                    #
########################################################################################################################

# Light on: bedroom (sunrise)
- alias: Light on, bedroom (sunrise)
  id: 'sunrise_light'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunrise
    offset: '00:10:00'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.bedroom
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'on'
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 1
    - delay: '00:00:01'
    - service: light.turn_on
      entity_id: light.bedroom
      data:
        brightness: 254
        transition: 900

# Light on: living room (evening)
- alias: 'Light on, living room (evening)'
  id: 'lights on in the evening'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: 13.5
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.living_room
        state: 'off'
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 100
        color_temp: 153

# Light on: living room (someone comes home)
- alias: Light on, living room (someone comes home)
  id: 'lights on when home'
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id:
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.living_room
        state: 'off'
      - condition: time
        after: '17:00:00'
        before: '07:00:00'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 100
        color_temp: 153

# Lights and heaters off: all (nobody home)
- alias: Lights and heaters off - all (nobody home)
  id: 'nobody_home_lights_heaters_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
    to: 'off'
    for:
      minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'off'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'off'
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    - service: switch.turn_off
      entity_id: switch.plug_bedroomheater_switch
    - service: switch.turn_off
      entity_id: switch.plug_studyheater_switch

# Warning - left the house with the door open
- alias: Warning - left the house with the door open
  id: 'warning_left_the_house_with_the_door_open'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.graham_bayesian
    - binary_sensor.bora_bayesian
    to: 'off'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.door_bedroom
      state: 'on'
  action:
    - service: notify.graham_telegram
      data:
        message: "You left home with the bedroom door open. Molly!"

# Warning: Door open while nobody home
- alias: Warning - door open while nobody home
  id: 'automation.warning_door_opened_while_nobody_was_home'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
  action:
    - service: notify.graham_telegram
      data:
        message: "Nobody is home but the bedroom door opened."

# Flash study and living room when birdie arrives at work
- alias: Birdie arrives at work
  id: 'birdie_arrive_work'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: device_tracker.google_maps_111604514484536138497
    zone: zone.work
    event: enter
  condition:
    condition: and
    conditions:
    - condition: time
      after: '08:00:00'
      before: '10:00:00'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.dining_room
      data:
        color_name: green
        brightness_pct: 100
    - delay:
        seconds: 2
    - service: light.turn_on
      entity_id: light.dining_room
      data:
        brightness_pct: 100
        color_temp: 153
      

# Flash study and living room when birdie leaves work
- alias: Birdie leaves work
  id: 'birdie_leaves_work'
  hide_entity: True
  initial_state: 'on'
  trigger:
  - platform: zone
    entity_id: device_tracker.google_maps_111604514484536138497
    zone: zone.work
    event: leave
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
    - condition: time
      after: '16:30:00'
      before: '22:00:00'
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.dining_room
      data:
        color_name: red
        brightness_pct: 100
    - delay:
        seconds: 2
    - service: light.turn_on
      entity_id: light.dining_room
      data:
        brightness_pct: 100
        color_temp: 153

# Flash study and living room, and turn living room lights on when birdie is almost home
- alias: Birdie almost home
  id: 'birdie_almost_home'
  hide_entity: True
  initial_state: 'on'
  trigger:
  - platform: zone
    entity_id: device_tracker.google_maps_111604514484536138497
    zone: zone.rhodes
    event: enter
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
    - condition: time
      after: '16:30:00'
      before: '22:00:00'
    - condition: state
      entity_id: 'binary_sensor.workday_sensor'
      state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.dining_room
      data:
        color_name: blue
        brightness_pct: 100
    - delay:
        seconds: 2
    - service: light.turn_on
      entity_id: light.dining_room
      data:
        brightness_pct: 100
        color_temp: 153
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 100
        color_temp: 153

    - service: light.turn_on
      entity_id: light.dining_room
    - service: tts.google_say
      entity_id: media_player.molly_home
      data:
        message: 'Bora is at Rhodes and will be home soon!'

########################################################################################################################
#                                                           SWITCHES                                                   #
########################################################################################################################

# Study heater off (no motion)
- alias: Study heater off (no motion)
  id: 'studyheater_off_nomotion'
  hide_entity: True
  initial_state: 'off'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 20
  condition:
    condition: state
    entity_id: switch.plug_studyheater_switch
    state: 'on'
  action:
    - service: switch.turn_off
      entity_id: switch.plug_studyheater_switch

# Bedroom fan off when door closes and birdie is away
- alias: Bedroom fan off - door closes, birdie away
  id: 'bedroom_fan_off_door_closes_birdie_away'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'on'
    to: 'off'
  condition:
    - condition: template
      value_template: "{{ not is_state('binary_sensor.bora_bayesian', 'on') }}"
    - condition: template
      value_template: "{{states('sensor.plug_kettle_power')|float > 0.6}}"
  action:
    service: switch.turn_off
    # entity_id: switch.plug_bedroomheater_switch
    entity_id: switch.plug_kettle_switch

# Bedroom fan off when birdie leaves and the door is cloesd
- alias: Bedroom fan off - birdie away, door closes
  id: 'bedroom_fan_off_birdie_away_door_closes'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.bora_bayesian
    to: 'off'
  condition:
    - condition: state
      entity_id: binary_sensor.door_bedroom
      state: 'off'
    - condition: template
      value_template: "{{states('sensor.plug_kettle_power')|float > 0.6}}"
  action:
    service: switch.turn_off
      # entity_id: switch.plug_bedroomheater_switch
    entity_id: switch.plug_kettle_switch

# Bedroom fan back on when birdie comes home
- alias: Bedroom fan on - birdie arrives
  id: 'bedroom_fan_on_birdie_arrives'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.bora_bayesian
    to: 'on'
  condition:
    - condition: state
      entity_id: switch.plug_kettle_switch
      state: 'off'
  action:
    service: switch.turn_on
    entity_id:
      - switch.plug_kettle_switch
      - switch.plug_studyheater_switch


########################################################################################################################
#                                                           XIAOMI                                                     #
########################################################################################################################

- alias: 'Door open: bedroom light on (daytime)'
  id: 'door_open_bedroom_light_on_daytime'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  condition:
    condition: time
    after: '06:00:00'
    before: '23:00:00'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.bedroom
        brightness_pct: 100
        color_temp: 153

- alias: 'Door open: bedroom light on (night)'
  id: 'door_open_bedroom_light_on_night'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  condition:
    condition: time
    after: '23:00:00'
    before: '06:00:00'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.bedroom
        brightness_pct: 20
        color_temp: 500

- alias: 'Door closed: bedroom light off'
  id: 'door_closed_bedroom_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'on'
    to: 'off'
  action:
    - service: light.turn_off
      entity_id: light.bedroom

- alias: 'Bedroom button: light on (daytime)'
  id: 'bedroom_button_light_on_daytime'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'off'
      - condition: time
        after: '06:00:00'
        before: '23:00:00'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.bedroom
        brightness_pct: 100
        color_temp: 153

- alias: 'Bedroom button: light on (night)'
  id: 'bedroom_button_light_on_night'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: time
        after: '23:00:00'
        before: '06:00:00'
      - condition: state
        entity_id: light.bedroom
        state: 'off'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.bedroom
        brightness_pct: 20
        color_temp: 500

- alias: 'Bedroom button: light off'
  id: 'bedroom_button_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.bedroom

- alias: 'Bedroom button: double click all lights off'
  id: 'bedroom_button_all_lights_off_double_click'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: template
    value_template: "{{ 'double' == trigger.payload_json.click }}"
  action:
    - service: light.turn_off
      entity_id: light.bedroom
    - service: light.turn_off
      entity_id: light.kitchen
    - service: light.turn_off
      entity_id: light.living_room
    - service: light.turn_off
      entity_id: light.dining_room

- alias: 'Bedroom button: triple click heater toggle'
  id: 'bedroom_button_triple_click_heater_toggle'
  hide_entity: True
  initial_state: 'off'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: template
    value_template: "{{ 'triple' == trigger.payload_json.click }}"
  action:
    - service_template: >
        {% if is_state("switch.plug_bedroomheater_switch", "off") %}
          switch.turn_on
        {% else %}
          switch.turn_off
        {% endif %}
      entity_id: switch.plug_bedroomheater_switch
    - service: tts.google_say
      entity_id: media_player.molly_mini
      data_template:
        message: >
          {% if is_state("switch.plug_bedroomheater_switch", "off") %}
            message: 'Turning on the heater'
          {% else %}
            message: 'Turning off the heater'
          {% endif %}

# - alias: 'Bedroom button: long press boil kettle'
#   id: 'bedroom_button_long_press_boil_kettle'
#   hide_entity: True
#   initial_state: 'off'
#   trigger:
#     platform: mqtt
#     topic: 'zigbee2mqtt/button_bedroom'
#   condition:
#     condition: template
#     value_template: "{{ 'long_release' == trigger.payload_json.click }}"
#   action:
#     - service_template: >
#         {% if is_state("switch.plug_kettle_switch", "off") %}
#           switch.turn_on
#         {% else %}
#           switch.turn_off
#         {% endif %}
#       entity_id: switch.plug_kettle_switch
#     - service: tts.google_say
#       entity_id: media_player.molly_mini
#       data_template:
#         message: >
#           {% if is_state("switch.plug_kettle_switch", "off") %}
#             message: 'Turning on the kettle'
#           {% else %}
#             message: 'Turning off the kettle'
#           {% endif %}

- alias: 'Bedroom button: long press dim bedroom'
  id: 'bedroom_button_long_press_dim'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: template
    value_template: "{{ 'long_release' == trigger.payload_json.click }}"
  action:
    - service:  light.turn_on
      data:
        entity_id: light.bedroom
        brightness_pct: 20
        color_temp: 500

- alias: 'Bedroom switch: light on'
  id: 'bedroom_switch_light_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'off'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.bedroom
        brightness_pct: 100
        color_temp: 153

- alias: 'Bedroom switch: light off'
  id: 'bedroom_switch_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.bedroom

- alias: 'Kitchen switch: light on'
  id: 'kitchen_switch_light_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_kitchen'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.kitchen
        state: 'off'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.kitchen
        brightness_pct: 100
        color_temp: 153

- alias: 'Kitchen switch: light off'
  id: 'kitchen_switch_light_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_kitchen'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.kitchen
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.kitchen

- alias: 'Study switch: light on'
  id: 'study_switch_light_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_study'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.study_2
        state: 'off'
  action:
    service: light.turn_on
    entity_id: light.study_2

- alias: 'Study switch: light off (night)'
  id: 'study_switch_light_off_night'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_study'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '23:00:00'
        before: '07:00:00'
      - condition: state
        entity_id: light.study_2
        state: 'on'
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
  action:
    - service: light.turn_off
      entity_id: light.study_2
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 20
        color_temp: 500

- alias: 'Study switch: light off (daytime)'
  id: 'study_switch_light_off_daytime'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_study'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '23:00:00'
      - condition: state
        entity_id: light.study_2
        state: 'on'
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
  action:
    - service: light.turn_off
      entity_id: light.study_2

- alias: 'Left switch: living room on'
  id: 'left_switch_living_room_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'left' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.living_room
        state: 'off'
  action:
    - service:  light.turn_on
      data:
        entity_id: light.living_room
        brightness_pct: 100
        color_temp: 153

- alias: 'Left switch: living room off'
  id: 'left_switch_living_room_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'left' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.living_room
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.living_room

- alias: 'Right switch: dining room on'
  id: 'right_switch_dining_room_on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'right' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.dining_room
        state: 'off'
  action:
    service: light.turn_on
    entity_id: light.dining_room

- alias: 'Right switch: dining room off'
  id: 'right_switch_dining_room_off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'right' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.dining_room
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.dining_room

- alias: 'Both switches: living/dining room toggle'
  id: 'both_switches_living_dining_room_toggle'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: template
    value_template: "{{ 'both' == trigger.payload_json.click }}"
  action:
    service: light.toggle
    entity_id: light.living_room, light.dining_room

# Turn on heater and kettle after 9pm if temperature is below 20
- alias: "Turn on heater and kettle at 9pm if temperature is below 20"
  id: 'heater_kettle_on_9pm_temperature_below_20'
  hide_entity: True
  initial_state: 'off'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    - condition: numeric_state
      entity_id: 'sensor.temperature'
      below: '20'
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'on'
  action:
    - service: switch.turn_on
      entity_id: switch.plug_bedroomheater_switch
    - service: switch.turn_on
      entity_id: switch.plug_kettle_switch
    - service: tts.google_say
      entity_id: media_player.molly_home
      data:
        message: 'Turning on the heater and kettle'

# Turn off receiver after 5 minutes of living room light off
- alias: Receiver off - living room off 5 minutes
  id: 'receiver_off_5_minutes_living'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: light.living_room
    to: 'off'
    for:
      minutes: 5
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: switch.plug_studyheater_switch
        state: 'on'
      - condition: template
        value_template: "{{ not is_state('media_player.molly_dongle', 'playing') }}"
  action:
    - service: switch.turn_off
      entity_id: switch.plug_studyheater_switch

# Toggle receiver power - Chromecast Idle -> Playing
- alias: "Turn on receiver - Chromecast Idle -> Playing"
  id: 'turn_on_receiver_chromecast_idle_to_playing'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: media_player.molly_dongle
    from: 'idle'
    to: 'playing'
  condition:
    condition: state
    entity_id: switch.plug_studyheater_switch
    state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.plug_studyheater_switch

# Set theme at startup
- alias: 'Set theme at startup'
  id: 'set_theme_at_startup'
  hide_entity: True
  initial_state: 'on'
  trigger:
   - platform: homeassistant
     event: start
  action:
    service: frontend.set_theme
    data:
      name: midnight

# Theme switcher
- alias: 'Automatic Theme Change'
  id: 'automatic_theme_change'
  hide_entity: True
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.hass_template
  action:
    - service: frontend.set_theme
      data_template:
        name: "{{ states.input_select.hass_template.state }}"

# Bora S8 Bluetooth Occupancy - True
- alias: 'Bora S8 Bluetooth Occupancy - True'
  id: 's8_bluetooth_occupancy_true'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.bora_s8_bluetooth
      above: 85
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.s8_bluetooth_occupancy

# Bora S8 Bluetooth Occupancy - False
- alias: 'Bora S8 Bluetooth Occupancy - False'
  id: 's8_bluetooth_occupancy_false'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.bora_s8_bluetooth
      below: 20
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.s8_bluetooth_occupancy

# Graham Pixel Bluetooth Occupancy - True
- alias: 'Graham Pixel Bluetooth Occupancy - True'
  id: 'pixel_bluetooth_occupancy_true'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.graham_pixel_bluetooth
      above: 85
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.pixel_bluetooth_occupancy

# Graham Pixel Bluetooth Occupancy - False
- alias: 'Graham Pixel Bluetooth Occupancy - False'
  id: 'pixel_bluetooth_occupancy_false'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.graham_pixel_bluetooth
      below: 20
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.pixel_bluetooth_occupancy

# Google Next Train
- alias: 'Next Train - Google'
  id: 'google_next_train'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: state
      entity_id: input_boolean.next_train
      from: 'off'
      to: 'on'
  action:
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.speak_next_train
    - service: input_boolean.turn_off
      entity_id: input_boolean.next_train

# Security Camera Capture (nobody home)
- alias: Security Camera Capture
  id: 'security_camera_capture'
  hide_entity: True
  initial_state: 'off'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
  action:
    - service: script.living_cam