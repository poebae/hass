########################################################################################################################
#                                                    SENSOR LIGHTS                                                     #
########################################################################################################################

# Light on, dining room (motion detected)
- alias: Light on, dining room (motion detected)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.dining_room
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
  - service: light.turn_on
    entity_id: light.dining_room

# Light off, dining room (no motion)
- alias: Light off, dining room (no motion)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_study_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 10
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.dining_room
      state: 'on'
    - condition: state
      entity_id: light.living_room
      state: 'off'
  action:
    - service: light.turn_off
      entity_id: light.dining_room
    - service: switch.turn_off
      entity_id: switch.plug_kettle_switch

# Light on, kitchen (motion detected)
- alias: Light on, kitchen (motion detected)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ (state_attr('sun.sun', 'elevation')) < 13.5 }}"
      - condition: state
        entity_id: light.kitchen
        state: 'off'
      - condition: or
        conditions:
        - condition: state
          entity_id: binary_sensor.bora_bayesian
          state: 'on'
        - condition: state
          entity_id: binary_sensor.graham_bayesian
          state: 'on'
  action:
    - service:  light.turn_on
      entity_id: light.kitchen

# Light off, kitchen (no motion)
- alias: Light off, kitchen (no motion)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_kitchen_occupancy
    from: 'on'
    to: 'off'
    for:
      minutes: 2
  condition:
      condition: state
      entity_id: light.kitchen
      state: 'on'
  action:
    service: light.turn_off
    entity_id: light.kitchen

# Light on, living room (motion detected)
- alias: Light on, living room (motion detected)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: "{{ (state_attr('sun.sun', 'elevation')) < 13.5 }}"
    - condition: state
      entity_id: light.living_room
      state: 'off'
    - condition: or
      conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'on'
  action:
    - service:  light.turn_on
      entity_id: light.living_room

# Light off, living room (no motion)
- alias: Light off, living room (no motion)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living_occupancy
    from: 'on'
    to: 'off'
  condition:
    condition: or
    conditions:
      - condition: and
        conditions:
        - condition: state
          entity_id: binary_sensor.door_bedroom
          state: 'on'
        - condition: state
          entity_id: light.bedroom
          state: 'off'
        - condition: template
          value_template: "{{ not is_state('media_player.molly_dongle', 'playing') }}"
        - condition: state
          entity_id: light.living_room
          state: 'on'
      - condition: and
        conditions:
        - condition: template
          value_template: "{{ not is_state('binary_sensor.bora_bayesian', 'on') }}"
        - condition: template
          value_template: "{{ not is_state('media_player.molly_dongle', 'playing') }}"
        - condition: state
          entity_id: light.living_room
          state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.living_room

########################################################################################################################
#                                                    ROUTINE LIGHTS                                                    #
########################################################################################################################

# Light on: 5am (birdie away)
- alias: Light on, 5am (birdie away)
  hide_entity: True
  initial_state: 'off'
  trigger:
    platform: time
    at: '05:00:00'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.bedroom
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
        - sat
  action:
    - service: light.turn_on
      entity_id: light.bedroom

# Light on: bedroom (sunrise)
- alias: Light on, bedroom (sunrise)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunrise
    offset: '01:00:00'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: light.bedroom
      state: 'off'
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'on'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: light.turn_on
      entity_id: light.bedroom

# Light on: living room (evening)
- alias: 'Light on, living room (evening)'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: numeric_state
    entity_id: sun.sun
    value_template: '{{ state.attributes.elevation }}'
    below: 13.5
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.living_room
        state: 'off'
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'on'
  action:
    - service:  light.turn_on
      entity_id: light.living_room

# Light on: living room (someone comes home)
- alias: Light on, living room (someone comes home)
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id:
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: light.living_room
        state: 'off'
      - condition: template
        value_template: "{{ (state_attr('sun.sun', 'elevation')) < 13.5 }}"
  action:
    - service:  light.turn_on
      entity_id: light.living_room

# Lights and heaters off: all (nobody home)
- alias: Lights and heaters off - all (nobody home)
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
      - binary_sensor.graham_bayesian
      - binary_sensor.bora_bayesian
    to: 'off'
    for:
      minutes: 2
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.bora_bayesian
        state: 'off'
      - condition: state
        entity_id: binary_sensor.graham_bayesian
        state: 'off'
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    - service: switch.turn_off
      entity_id: switch.0x00158d0002495404_switch
    - service: switch.turn_off
      entity_id: switch.0x00158d00024d8cc9_switch

########################################################################################################################
#                                                           XIAOMI                                                     #
########################################################################################################################

- alias: 'Door open: bedroom light on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  action:
    - service:  light.turn_on
      entity_id: light.bedroom

- alias: 'Door closed: bedroom light off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'on'
    to: 'off'
  action:
    - service: light.turn_off
      entity_id: light.bedroom

- alias: 'Bedroom button: light on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'off'
  action:
    - service:  light.turn_on
      entity_id: light.bedroom

- alias: 'Bedroom button: light off (all but dining)'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'on'
      - condition: state
        entity_id: binary_sensor.motion_study_occupancy
        state: 'on'
  action:
    - service: light.turn_off
      entity_id: light.bedroom
    - service: light.turn_off
      entity_id: light.living_room
    - service: light.turn_off
      entity_id: light.kitchen

- alias: 'Bedroom button: light off (including dining)'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'on'
      - condition: state
        entity_id: binary_sensor.motion_study_occupancy
        state: 'off'
  action:
    - service: light.turn_off
      entity_id: light.bedroom
    - service: light.turn_off
      entity_id: light.living_room
    - service: light.turn_off
      entity_id: light.dining_room
    - service: light.turn_off
      entity_id: light.kitchen

- alias: 'Bedroom button: double click all lights off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/button_bedroom'
  condition:
    condition: template
    value_template: "{{ 'double' == trigger.payload_json.click }}"
  action:
    - service: light.turn_off
      entity_id: light.bedroom
    - service: light.turn_off
      entity_id: light.kitchen
    - service: light.turn_off
      entity_id: light.living_room
    - service: light.turn_off
      entity_id: light.dining_room

- alias: 'Bedroom switch: light on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'off'
  action:
    - service:  light.turn_on
      entity_id: light.bedroom

- alias: 'Bedroom switch: light off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_bedroom'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.bedroom
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.bedroom

- alias: 'Kitchen switch: light on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_kitchen'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.kitchen
        state: 'off'
  action:
    - service:  light.turn_on
      entity_id: light.kitchen

- alias: 'Kitchen switch: light off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_kitchen'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.kitchen
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.kitchen

- alias: 'Study switch: light on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_study'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.study
        state: 'off'
  action:
    service: light.turn_on
    entity_id: light.study

- alias: 'Study switch: light off (daytime)'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_study'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '07:00:00'
        before: '22:00:00'
      - condition: state
        entity_id: light.study
        state: 'on'
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
  action:
    - service: light.turn_off
      entity_id: light.study

- alias: 'Study switch: light off (night)'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_study'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '22:00:00'
        before: '07:00:00'
      - condition: state
        entity_id: light.study
        state: 'on'
      - condition: template
        value_template: "{{ 'single' == trigger.payload_json.click }}"
  action:
    - service: light.turn_off
      entity_id: light.study
    - service:  light.turn_on
      entity_id: light.living_room

- alias: 'Left switch: living room on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'left' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.living_room
        state: 'off'
  action:
    - service:  light.turn_on
      entity_id: light.living_room

- alias: 'Left switch: living room off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'left' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.living_room
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.living_room

- alias: 'Right switch: dining room on'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'right' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.dining_room
        state: 'off'
  action:
    service: light.turn_on
    entity_id: light.dining_room


- alias: 'Right switch: dining room off'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: "{{ 'right' == trigger.payload_json.click }}"
      - condition: state
        entity_id: light.dining_room
        state: 'on'
  action:
    service: light.turn_off
    entity_id: light.dining_room

- alias: 'Both switches: living/dining room toggle'
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: mqtt
    topic: 'zigbee2mqtt/wall_living'
  condition:
    condition: template
    value_template: "{{ 'both' == trigger.payload_json.click }}"
  action:
    service: light.toggle
    entity_id: light.living_room, light.dining_room

########################################################################################################################
#                                                     NOTIFICATIONS                                                    #
########################################################################################################################

# Warning - left the house with the door open
- alias: Warning - left the house with the door open
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.graham_bayesian
    - binary_sensor.bora_bayesian
    to: 'off'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.door_bedroom
      state: 'on'
  action:
    - service: notify.graham_telegram
      data:
        message: "You left home with the bedroom door open. Molly!"

# Warning: Door open while nobody home
- alias: Warning - door open while nobody home
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
  action:
    - service: notify.graham_telegram
      data:
        message: "Bedroom door was opened while nobody was home"

# Birdie arrives at work
- alias: Birdie arrives at work
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: zone
    entity_id: device_tracker.galaxys8
    zone: zone.aje
    event: enter
  condition:
    condition: and
    conditions:
    - condition: time
      after: '08:00:00'
      before: '10:00:00'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
  action:
    - service: tts.google_translate_say
      entity_id: media_player.molly_home
      data:
        message: 'Bora arrived at work'

# Birdie leaves work
- alias: Birdie leaves work
  hide_entity: True
  initial_state: 'on'
  trigger:
  - platform: zone
    entity_id: device_tracker.galaxys8
    zone: zone.aje
    event: leave
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
    - condition: time
      after: '16:30:00'
      before: '22:00:00'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
  action:
    - service: tts.google_translate_say
      entity_id: media_player.molly_home
      data:
        message: 'Bora left work'

# Birdie almost home
- alias: Birdie almost home
  hide_entity: True
  initial_state: 'on'
  trigger:
  - platform: zone
    entity_id: device_tracker.galaxys8
    zone: zone.rhodes
    event: enter
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'on'
    - condition: time
      after: '16:30:00'
      before: '22:00:00'
    - condition: state
      entity_id: binary_sensor.workday_sensor
      state: 'on'
  action:
    - service: light.turn_on
      entity_id: light.dining_room
    - service:  light.turn_on
      entity_id: light.living_room
    - service: tts.google_translate_say
      entity_id: media_player.molly_home
      data:
        message: 'Bora is at Rhodes and will be home soon!'

########################################################################################################################
#                                                          ROUTINES                                                    #
########################################################################################################################

# Heater on, birdie comes home
- alias: Heater on, birdie comes home
  hide_entity: True
  initial_state: 'on'
  trigger:
      platform: state
      entity_id: binary_sensor.bora_bayesian
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: time
        after: '20:45:00'
      - condition: numeric_state
        entity_id: sensor.dark_sky_apparent_temperature
        below: '20'
      - condition: state
        entity_id: switch.0x00158d0002495404_switch
        state: 'off'
  action:
    - service:  switch.turn_on
      entity_id: switch.0x00158d0002495404_switch
    - service: tts.google_translate_say
      entity_id: media_player.molly_home
      data_template:
        message: 'Welcome home. The temperature is {{ states.sensor.dark_sky_apparent_temperature.state }} degrees. Turning on the heater'

# Bedroom fan/heater off when door closes and birdie is away
- alias: Bedroom fan/heater off - door closes, birdie away
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.door_bedroom
    from: 'on'
    to: 'off'
  condition:
    - condition: template
      value_template: "{{ is_state('binary_sensor.bora_bayesian', 'off') }}"
    - condition: template
      value_template: "{{states('sensor.0x00158d0002495404_power')|float > 0.6}}"
    - condition: state
      entity_id: switch.0x00158d0002495404_switch
      state: 'on'
  action:
    - service: switch.turn_off
      entity_id: switch.0x00158d0002495404_switch
    - service: light.turn_off
      entity_id: light.living_room

# Bedroom fan/heater off when birdie leaves and the door is closed
- alias: Bedroom fan/heater off - birdie away, door closed
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.bora_bayesian
    to: 'off'
  condition:
    - condition: state
      entity_id: binary_sensor.door_bedroom
      state: 'off'
    - condition: template
      value_template: "{{states('sensor.0x00158d0002495404_power')|float > 0.6}}"
  action:
    - service: switch.turn_off
      entity_id: switch.0x00158d0002495404_switch
    - service: light.turn_off
      entity_id: light.living_room

# Turn on heater at 9:30pm if temperature is below 20
- alias: "Night, turn on heater"
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: time
    at: '21:30:00'
  condition:
    - condition: numeric_state
      entity_id: sensor.dark_sky_apparent_temperature
      below: '20'
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'on'
    - condition: state
      entity_id: switch.0x00158d0002495404_switch
      state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.0x00158d0002495404_switch
    - service: tts.google_translate_say
      entity_id: media_player.molly_home
      data_template:
        message: 'The temperature is {{ states.sensor.dark_sky_apparent_temperature.state }} degrees. Turning on the heater'

# Turn off receiver after 5 minutes of living room light off
- alias: Receiver off - living room off 5 minutes
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: light.living_room
    to: 'off'
    for:
      minutes: 5
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: switch.0x00158d00024d8cc9_switch
        state: 'on'
      - condition: template
        value_template: "{{ not is_state('media_player.molly_dongle', 'playing') }}"
      - condition: state
        entity_id: binary_sensor.door_bedroom
        state: 'on'
      - condition: state
        entity_id: light.bedroom
        state: 'off'
  action:
    - service: switch.turn_off
      entity_id: switch.0x00158d00024d8cc9_switch

# Turn on receiver - Chromecast Idle -> Playing
- alias: "Turn on receiver - Chromecast Idle -> Playing"
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{% if not is_state('media_player.molly_dongle', 'off') %}true{% endif %}"
  condition:
    condition: state
    entity_id: switch.0x00158d00024d8cc9_switch
    state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.0x00158d00024d8cc9_switch

# Google Next Train
- alias: 'Next Train - Google'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: state
      entity_id: input_boolean.next_train
      from: 'off'
      to: 'on'
  action:
    - delay:
        seconds: 2
    - service: script.turn_on
      entity_id: script.speak_next_train
    - service: input_boolean.turn_off
      entity_id: input_boolean.next_train

# Security Camera Capture (nobody home)
- alias: Security Camera Capture
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_living_occupancy
    from: 'off'
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.bora_bayesian
      state: 'off'
    - condition: state
      entity_id: binary_sensor.graham_bayesian
      state: 'off'
  action:
    - service: script.living_cam

# Startup tasks
- alias: 'Startup tasks'
  hide_entity: True
  initial_state: 'on'
  trigger:
   - platform: homeassistant
     event: start
  action:
    - service: frontend.set_theme
      data:
        name: midnight
    - service: speedtestdotnet.speedtest

# Turn circadian lighting on at 22:30
- alias: Circadian on, 9:00 and
  hide_entity: True
  initial_state: 'off'
  trigger:
  - platform: time
    at: '22:30:00'
  action:
    service: switch.turn_on
    entity_id: switch.circadian_lighting_all

# Turn circadian lighting off at 15:00
- alias: Circadian off, 15:00
  hide_entity: True
  initial_state: 'on'
  trigger:
    platform: time
    at: '15:00:00'
  action:
    service: switch.turn_off
    entity_id: switch.circadian_lighting_all

# Update notification
- alias: 'Update notification'
  hide_entity: True
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: updater.updater
  action:
    - service: notify.graham_telegram
      data:
        message: 'There is a new Home Assistant release available.'

# Bora S8 Bluetooth Occupancy - True
- alias: 'Bora S8 Bluetooth Occupancy - True'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.bora_s8_bluetooth
      above: 85
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.s8_bluetooth_occupancy

# Bora S8 Bluetooth Occupancy - False
- alias: 'Bora S8 Bluetooth Occupancy - False'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.bora_s8_bluetooth
      below: 20
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.s8_bluetooth_occupancy

# Graham Pixel Bluetooth Occupancy - True
- alias: 'Graham Pixel Bluetooth Occupancy - True'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.graham_pixel_bluetooth
      above: 85
  action:
    - service: homeassistant.turn_on
      data:
        entity_id: input_boolean.pixel_bluetooth_occupancy

# Graham Pixel Bluetooth Occupancy - False
- alias: 'Graham Pixel Bluetooth Occupancy - False'
  initial_state: 'on'
  hide_entity: true
  trigger:
    - platform: numeric_state
      entity_id: sensor.graham_pixel_bluetooth
      below: 20
  action:
    - service: homeassistant.turn_off
      data:
        entity_id: input_boolean.pixel_bluetooth_occupancy
