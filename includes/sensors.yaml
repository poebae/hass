# HA Uptime
- platform: uptime
  name: "HA uptime"
  unit_of_measurement: minutes

- platform: aftership
  api_key: !secret aftership_key

# Fitbit
- platform: fitbit
  clock_format: 24H
  unit_system: metric
  monitored_resources:
    - "body/fat"
    - "body/bmi"
    - "body/weight"
    - "devices/battery"
    - "sleep/minutesAfterWakeup"
    - "sleep/minutesAsleep"
    - "sleep/minutesAwake"
    - "sleep/minutesToFallAsleep"
    - "sleep/startTime"
    - "sleep/timeInBed"

# Google Geocode
- platform: google_geocode
  name: graham_geocode
  origin: device_tracker.google_maps_116993081434204761650
  options: street_number, street, city
  api_key: !secret places_api

- platform: google_geocode
  name: bora_geocode
  origin: device_tracker.google_maps_111604514484536138497
  options: street_number, street,city
  api_key: !secret places_api

- platform: template
  sensors: 
    graham_battery:
      value_template: '{{ states.device_tracker.google_maps_116993081434204761650.attributes.battery_level }}'  
      friendly_name: 'Graham Pixel 3 Battery' 
      unit_of_measurement: '%'
      icon_template: >
       {% set battery_level = states.device_tracker.google_maps_116993081434204761650.attributes.battery_level|default(0)|int %}
       {% set battery_round = (battery_level / 10) |int * 10 %}
       {% if battery_round >= 100 %}
         mdi:battery
        {% elif battery_round > 0 %}
         mdi:battery-{{ battery_round }}
       {% else %}
         mdi:battery-alert
       {% endif %}

    bora_battery:
      value_template: '{{ states.device_tracker.google_maps_111604514484536138497.attributes.battery_level }}'  
      friendly_name: 'Bora Galaxy S8 Battery' 
      unit_of_measurement: '%'
      icon_template: >
       {% set battery_level = states.device_tracker.google_maps_111604514484536138497.attributes.battery_level|default(0)|int %}
       {% set battery_round = (battery_level / 10) |int * 10 %}
       {% if battery_round >= 100 %}
         mdi:battery
        {% elif battery_round > 0 %}
         mdi:battery-{{ battery_round }}
       {% else %}
         mdi:battery-alert
       {% endif %}

# Weather
- platform: darksky
  api_key: !secret darksky_key
  language: it
  forecast:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
  monitored_conditions:
    - icon
    - summary
    - nearest_storm_distance
    - nearest_storm_bearing
    - humidity
    - temperature
    - temperature_high
    - temperature_low
    - apparent_temperature
    - apparent_temperature_high
    - apparent_temperature_low
    - wind_speed
    - wind_bearing
    - precip_type
    - precip_probability
    - precip_accumulation
    - precip_intensity
    - precip_intensity_max
    - uv_index
    - daily_summary
    - pressure
    - visibility
  scan_interval:
    minutes: 5

# Transit
- platform: google_travel_time
  name: Drive to ATA
  api_key: !secret google_api
  origin: zone.home
  destination: 1 Fitzwilliam St, Parramatta
  options:
    mode: driving

- platform: google_travel_time
  name: Drive to Aje
  api_key: !secret google_api
  origin: zone.home
  destination: 94 Oxford St, Paddington
  options:
    mode: driving

- platform: transport_nsw
  name: 'Next train to Central'
  stop_id: '2114181'
  api_key: !secret 'transportnswkey'

# System Monitor
- platform: systemmonitor
  resources:
  - type: disk_use_percent
    arg: /
  - type: memory_free
  - type: processor_use
  - type: network_in
    arg: wlp8s0
  - type: network_out
    arg: wlp8s0
  - type: last_boot

# Steam
- platform: steam_online
  api_key: !secret steamkey
  accounts:
    - 76561198051415178

# Current Steam game  
- platform: template
  sensors:
    steam_game:
      friendly_name: "Game"
      value_template: "{{ states.sensor.steam_76561198051415178.attributes.game }}"

# In game?
- platform: template
  sensors:
    ingame:
      friendly_name: "In Game?"
      value_template: >-
        {% if is_state('sensor.steam_game', '') %}
          no
        {% else %}
          yes
        {% endif %}

# Door Sensor Template for Floorplan
- platform: template
  sensors:
    bedroom_door_closed:
      entity_id: binary_sensor.door_bedroom
      value_template: >
        {% if is_state('binary_sensor.door_bedroom', 'off') %}
          on
        {% else %}
          off
        {% endif %}

# Motion Sensor Template for Floorplan - Study
- platform: template
  sensors:
    study_motion:
      entity_id: binary_sensor.motion_study
      value_template: >
        {% if is_state('binary_sensor.motion_study_occupancy', 'on') %}
          on
        {% else %}
          off
        {% endif %}

# Motion Sensor Template for Floorplan - Kitchen
- platform: template
  sensors:
    kitchen_motion:
      entity_id: binary_sensor.motion_kitchen
      value_template: >
        {% if is_state('binary_sensor.motion_kitchen', 'on') %}
          on
        {% else %}
          off
        {% endif %}

# Motion Sensor Template for Floorplan - Living Room
- platform: template
  sensors:
    livingroom_motion:
      entity_id: binary_sensor.motion_living
      value_template: >
        {% if is_state('binary_sensor.motion_living', 'on') %}
          on
        {% else %}
          off
        {% endif %}

# Pihole
- platform: pi_hole
  host: 192.168.1.6
  monitored_conditions:
    - ads_blocked_today
    - ads_percentage_today
    - dns_queries_today
    - domains_being_blocked
    - queries_cached
    - queries_forwarded
    - unique_clients
    - unique_domains

# Xiaomi Batteries
- platform: mqtt
  name: Bedroom Door Sensor
  state_topic: "zigbee2mqtt/door_bedroom"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Bedroom Button
  state_topic: "zigbee2mqtt/button_bedroom"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Living Room Motion Sensor
  state_topic: "zigbee2mqtt/motion_living"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Kitchen Motion Sensor
  state_topic: "zigbee2mqtt/motion_kitchen"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Study Motion Sensor
  state_topic: "zigbee2mqtt/motion_study"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Bedroom Wall Switch
  state_topic: "zigbee2mqtt/wall_bedroom"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Living Room Wall Switch
  state_topic: "zigbee2mqtt/wall_living"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Kitchen Wall Switch
  state_topic: "zigbee2mqtt/wall_kitchen"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  name: Study Wall Switch
  state_topic: "zigbee2mqtt/wall_study"
  unit_of_measurement: "%"
  device_class: battery
  value_template: "{{ ((value_json.voltage - 2700)/(3075-2700)  * 100) | int }}"

- platform: mqtt
  state_topic: 'monitor/ha-monitor/80:7a:bf:07:1c:75'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Graham Pixel Bluetooth'

- platform: mqtt
  state_topic: 'monitor/ha-monitor/c8:d7:b0:ad:51:1f'
  value_template: '{{ value_json.confidence }}'
  unit_of_measurement: '%'
  name: 'Bora S8 Bluetooth'

# Aftership
- platform: template
  sensors: 
    aftership_pending:
      value_template: '{{ states.sensor.aftership.attributes.pending }}'  
      friendly_name: 'Pending'
    aftership_intransit:
      value_template: '{{ states.sensor.aftership.attributes.intransit }}'  
      friendly_name: 'In Transit'
    aftership_delivered:
      value_template: '{{ states.sensor.aftership.attributes.delivered }}'  
      friendly_name: 'Delivered'

#Sun
- platform: template
  sensors:
    time_sunrise:
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom("%H:%M") }}'
    time_sunset:
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom("%H:%M") }}'
    time_next_dawn:
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_dawn) | timestamp_custom("%H:%M") }}'
    time_next_dusk:
      value_template: '{{ as_timestamp(states.sun.sun.attributes.next_dusk) | timestamp_custom("%H:%M") }}'
    time_sun_elevation:
      value_template: '{{ states.sun.sun.attributes.elevation }}'
    time_sun_azimuth:
      value_template: '{{ states.sun.sun.attributes.azimuth }}'
